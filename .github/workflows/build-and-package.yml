name: build-and-package

on:
  push:
    branches: [mingw]

jobs:
  build-binaries:
    runs-on: windows-latest

    strategy:
      matrix:
        platform: [vs17-x64, vs17-x86]

    # https://github.com/marketplace/actions/vcpkg-cache
    permissions:
      actions: read
      contents: read # Usually enabled by default. Needed for checkout

    steps:
      # activating vcpkg GitHub Actions caching
      # https://learn.microsoft.com/en-us/vcpkg/consume/binary-caching-github-actions-cache
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.31.8'

      - name: Checkout code with dependencies
        uses: actions/checkout@v4
        with:
          submodules: true
      
      - name: Restore vcpkg cache
        id: vcpkg-cache
        uses: TAServers/vcpkg-cache@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: dtolnay/rust-toolchain@stable

      - name: Restore cargo cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "${{ github.workspace }}/thirdparty/librespot/ -> ${{ github.workspace }}/thirdparty/librespot/target"
          prefix-key: "v0-rust-${{ matrix.platform }}"

      - name: Configure spotifar
        env:
          VCPKG_FEATURE_FLAGS: "binarycaching" # Possibly redundant, but explicitly sets the binary caching feature flag
          VCPKG_BINARY_SOURCES: "clear;files,${{ steps.vcpkg-cache.outputs.path }},readwrite"
        working-directory: ${{ github.workspace }}
        run: cmake --preset ${{ matrix.platform }} -DBUILD_LIBRESPOT=1 -DCMAKE_INSTALL_PREFIX=./install/${{ matrix.platform }}

      - name: Build spotifar
        working-directory: ${{ github.workspace }}
        run: cmake --build --preset ${{ matrix.platform }}-Release --target install

      # - name: Pack librespot
      #   shell: cmd
      #   run: xcopy /Y ${{ github.workspace }}\\thirdparty\\librespot\\target\\release\\librespot.exe ${{ github.workspace }}\\build\\${{ matrix.platform }}\\bin\\Release\\
      
      # - name: Pack spotifar
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: spotifar-plugin-${{ matrix.platform }}-release
      #     path: |
      #         ${{ github.workspace }}/build/${{ matrix.platform }}/bin/Release

      - name: Pack spotifar
        uses: actions/upload-artifact@v4
        with:
          name: spotifar-plugin-${{ matrix.platform }}-release
          path: |
              ./install/${{ matrix.platform }}