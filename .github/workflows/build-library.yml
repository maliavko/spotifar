name: Build Library

on:
  workflow_call:
    inputs:
      build_librespot:
        required: false
        default: false
        type: boolean
      platforms:
        required: false
        default: '["vs17-x64", "vs17-x86", "clang-x64", "gcc-x64"]'
        type: string
      caching:
        required: false
        default: true
        type: boolean
      build_type:
        required: false
        default: 'Release'
        type: string
      upload_artifacts:
        required: false
        default: true
        type: boolean
      testing:
        required: false
        default: false
        type: boolean
      build_num:
        required: true
        type: string
      version_tag:
        required: true
        type: string

jobs:
  build-spotifar:
    runs-on: windows-latest
    permissions:
      actions: read
      contents: read
    strategy:
      matrix:
        platform: ${{ fromJSON(inputs.platforms) }}

    steps:
      # activating vcpkg GitHub Actions caching
      # https://learn.microsoft.com/en-us/vcpkg/consume/binary-caching-github-actions-cache
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Checkout code with dependencies
        uses: actions/checkout@v4
        with:
          submodules: true
      
      - name: Restore vcpkg cache
        id: vcpkg-cache
        uses: TAServers/vcpkg-cache@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Installing Msys2 for CLANG64
        uses: msys2/setup-msys2@v2
        if: ${{ matrix.platform == 'clang-x64' }}
        with:
          msystem: CLANG64
          update: true
          install: >
            mingw-w64-clang-x86_64-toolchain
            mingw-w64-clang-x86_64-cmake

      - name: Installing Msys2 for MINGW64
        uses: msys2/setup-msys2@v2
        if: ${{ matrix.platform == 'gcc-x64' }}
        with:
          msystem: MINGW64
          update: true
          install: >
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2
        if: ${{ matrix.platform == 'vs17-x64' || matrix.platform == 'vs17-x86' }}
        with:
          cmake-version: '3.31.8'

      - name: Setup ccache
        if: inputs.caching
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ runner.os }}

      - name: Cache build directory
        if: inputs.caching
        uses: actions/cache@v4
        with:
          path: build/
          key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: ${{ runner.os }}-cmake-

      # configuring and building
      - name: Configure spotifar
        env:
          VCPKG_FEATURE_FLAGS: "binarycaching" # Possibly redundant, but explicitly sets the binary caching feature flag
          VCPKG_BINARY_SOURCES: "clear;files,${{ steps.vcpkg-cache.outputs.path }},readwrite"
        run: cmake --preset ${{ matrix.platform }} -DPLUGIN_VER_BUILD=${{ inputs.build_num }} -DBUILD_LIBRESPOT=${{ inputs.build_librespot }} -DCMAKE_INSTALL_PREFIX=/install/${{ matrix.platform }} -DTESTING=${{ inputs.testing }}

      - name: Build spotifar
        run: cmake --build --preset ${{ matrix.platform }}-${{ inputs.build_type }} --target install --parallel $(nproc)

      # testing
      - name: Run tests
        if: inputs.testing
        run: ctest --preset ${{ matrix.platform }}

      # packaging
      - name: Download librespot
        if: inputs.upload_artifacts
        uses: actions/download-artifact@v5
        with:
          name: librespot-bin
          path: /install/${{ matrix.platform }}

      - name: Pack spotifar
        if: inputs.upload_artifacts
        run: |
          powershell Compress-Archive -Path /install/${{ matrix.platform }}/* -DestinationPath /install/spotifar-${{ matrix.platform }}-${{ inputs.version_tag }}.zip

      - name: Packaging artifacts
        if: inputs.upload_artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spotifar-${{ matrix.platform }}-${{ inputs.version_tag }}
          path: /install/spotifar-${{ matrix.platform }}-${{ inputs.version_tag }}.zip

      # reporting
      - name: ccache statistics
        if: inputs.caching
        run: ccache -s