{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",

    // extending win shell environment, so by default all the commands are
    // being launched with VsDevCmd context for ability to access VS dev
    // tools and variables
    "windows": {
      "options": {
        "shell": {
          "executable": "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/Tools/VsDevCmd.bat",
          "args": [
            "&"
          ]
        }
      }
    },
    "tasks": [
        {
            "label": "Build librespot",
            "type": "shell",
            "command": "cargo",
            "args": [
                "build",
                "--release",
                //"--no-default-features",
                "--manifest-path=${workspaceFolder}\\thirdparty\\librespot\\Cargo.toml\""
            ],
            "group": {
                "kind": "build"
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "clear": true
            },
            "dependsOn": ["Download librespot"],
            "dependsOrder": "sequence",
            "problemMatcher": "$msCompile"
        },
        {
            "label": "Far + Spotifar build and configure",
            "type": "shell",
            "group": {
                "kind": "build"
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "clear": true
            },
            "dependsOn": ["Far msbuild", "Spotifar cmake build", "Install Spotifar to Far"],
            "dependsOrder": "sequence",
            "problemMatcher": "$msCompile"
        },
        {
            "label": "Far msbuild",
            "type": "shell",
            "command": "msbuild",
            "args": [
                "${workspaceFolder}\\thirdparty\\Farmanager\\_build\\vc\\all.sln",
                "/t:Far\\Far",
                "/p:Configuration=\"${input:buildType}\"",
                "/p:Platform=\"${input:platform}\""
            ],
            "group": {
                "kind": "build"
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "clear": true
            },
            "problemMatcher": "$msCompile"
        },
        {
            "label": "Spotifar cmake build",
            "type": "shell",
            "command": "cmake --build --preset ${input:platform}-${input:buildType}",
            "group": {
                "kind": "build",
                "isDefault": true,
            },
            "dependsOn":["Spotifar cmake configure"],
            "problemMatcher": "$msCompile"
        },
        {
            "label": "Spotifar cmake configure",
            "type": "shell",
            "command": "cmake --preset ${input:platform}",
            "group": {
                "kind": "build"
            },
            "problemMatcher": "$msCompile"
        },
        {
            "label": "Install Spotifar to Far",
            "type": "shell",
            "command": "mklink",
            "args": [
                "/J",
                "${workspaceFolder}\\thirdparty\\FarManager\\_build\\vc\\_output\\product\\${input:buildType}.${input:platform}\\Plugins\\Spotifar\\",
                "${workspaceFolder}\\build\\${input:platform}\\bin\\${input:buildType}\\"
            ],
            "presentation": {
                "reveal": "silent"
            },
            "dependsOn": ["Create Spotifar plugin folder"],
            "group": {
                "kind": "build"
            }
        },
        {
            "label": "Create Spotifar plugin folder",
            "type": "shell",
            "command": "mkdir",
            "args": [
                "${workspaceFolder}\\thirdparty\\FarManager\\_build\\vc\\_output\\product\\${input:buildType}.${input:platform}\\Plugins\\"
            ],
            "group": {
                "kind": "build"
            }
        }
    ],
    "inputs": [
        {
            "id": "platform",
            "type": "pickString",
            "description": "Select a platform",
            "options": [
                "x64",
                "Win32"
            ],
            "default": "x64"
        },
        {
            "id": "buildType",
            "type": "pickString",
            "description": "Select a build type",
            "options": [
                "Release",
                "Debug"
            ],
            "default": "Debug"
        }
    ]
}
