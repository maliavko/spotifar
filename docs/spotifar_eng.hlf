.Language=English,English
.PluginContents=Spotifar
.Options CtrlStartPosChar=&
.Options CtrlColorChar=\



@Contents
$ #Spotifar#

    #Common info#

    Spotifar is an alternative Spotify client implemented as a Far Manager plugin. The plugin itself is a front-end for the [~Spotify Web API~@https://developer.spotify.com/documentation/web-api@], using the Far Manager API to draw panels and dialogs for users to perform basic manipulations with current playback and their Spotify collection. The plugin also includes the [~Librespot~@https://github.com/librespot-org/librespot@] playback device, which you can use for listening to your collection. Please note that Librespot is an open-source project and may have its own issues.

    The public API provided by Spotify is quite rich in capabilities, but sometimes lacks basic features, which are either implemented only partially or not at all. You can find detailed information in the appropriate ~Features~@Features@ section of this help.


    #Prerequisites#

    The plugin is designed to use the full Spotify API, which requires a #Premium Subscription# for most operations. It can still be used for free, but this is not well tested and many API calls will result in a "403 Forbidden" HTTP response. You can check all of them in the [~official docs~@https://developer.spotify.com/documentation/web-api@].

    The built-in Librespot device also requires a #Premium Subscription#.


    #Quick Start#

    Before you can start using the plugin, you need to complete a basic ~configuration~@QuickStart@, which is mandatory. You must obtain your own personal Spotify API #Client ID# and #Client Secret#, which will be used to authenticate the plugin without exposing your login and password.


    Useful links:
    [~Spotifar GitHub~@https://github.com/maliavko/spotifar@]
    [~Librespot GitHub~@https://github.com/librespot-org/librespot@]
    

    Related topics:
    ~Quick Start~@QuickStart@
    ~Supported Features~@Features@
    ~Browsing and Navigating~@Panels@
    ~Player dialog and hotkeys~@Player@
    ~Configuration~@Config@



@QuickStart


    The authorization flow used by the plugin is the one provided by the [~Spotify API~@https://developer.spotify.com/documentation/web-api/tutorials/code-flow@]. In short, for better security, users should generate a Client ID and Client Secret to avoid exposing their login and password directly. The plugin then uses these credentials to obtain and cache an auth code and access token, which is used with every API request via a Bearer token and is usually refreshed hourly.


    #Obtaining your own client id and secret#

    1. Open the [~Spotify developers dashboard~@https://developer.spotify.com/dashboard@]

    2. Click the #Create App# button and enter your information:
        - #App name# and #App description# are up to you
        - #Redirect URIs#: #http://127.0.0.1:5000/auth/callback#
        - "Which API/SDKs are you planning to use?" - select #Web API# and #Web Playback SDK#
        - Agree to Spotify's terms and save your data

    3. Assuming you are reading this help from Far Manager and the Spotifar plugin is installed, open the plugin settings (#Shift+Alt+F9#), select the #General# menu, and open the corresponding Settings dialog.

    4. In the #Spotify API# settings block, enter your newly obtained #Client ID# and #Client Secret#.

    5. Leave the #Port# unchanged unless you used a different one during your Spotify app registration in step 2.

    6. Launch login from the plugins or disks menu.

    7. On first launch, the plugin will resolve an auth code. It will open your default system browser to an auth page, where you will be asked to log in to Spotify (if not already logged in) and agree to the permissions required by the plugin. The full scope of possible Spotify API permissions can be found in the [~official docs~@https://developer.spotify.com/documentation/web-api/concepts/scopes@].

    8. If everything goes well, you will see a success page and can safely close it and start using the plugin.


    Related topics:
    ~Back to Main~@Contents@
    ~Configuration~@Config@
    ~Browsing and Navigating~@Panels@



@Features


    The idea behind the plugin development was to simplify the official Spotify desktop application, focusing only on what matters for daily usage.
Spotifar prioritizes your collection, aiming to provide simple and efficient access to it via Far panels. Below is a list of features that are already supported, partially supported, or not supported (unless Spotify changes their policies around their public API).


    #Major Spotify API changes#


    Starting from #November 27, 2024#, Spotify blocked some of their web endpoints, mainly related to their internal algorithms.
In practice, for third parties this means #no access# to:
    - all kinds of recommendations and features: similar artists, freshly released albums, playlists created for you, etc.
    - audio analysis features


    #Supported features#

    #Collections        # &your artists, albums, tracks and playlists representation and management, you can browse your collections like it is the list of files
                        on the panel, performing most regular operations like sorting, selection and etc. as well as seeing additional Spotify API info and performing
                        operations like saving or removing from your collection


    #Recents            # &recently played tracks, artists, albums or playlists. Spotify API provides access only to the latest 50 items, so the plugin stores
                        a cache of up to 250 items

    #Playing Queue      # &20 first items in the playing queue, provided by Spotify API


    #New Releases       # &as access to the fresh releases feature is blocked by the API, Spotifar implements its own. A separate threaded worker, once every 24 hours,
                        goes through all your followed artists and searches for their most recent releases (two-week timeframe)


    #User top items     # &your top artists and tracks over the past six months


    #Persistent modes   # &Spotifar saves your chosen panel view modes, sort modes, and last visited views into Far config individually for each view presented on 
the panel.


    #Player             # &a player dialog with a simple visual and all necessary basic components and controls


    #Global Hotkeys     # &possibility to register ~global hotkeys~@ConfigHotkeys@ for most playback commands like play, stop, skip, etc.


    #Notifications      # &Windows toast-like pop-up notifications in the tray bar for "Now playing" and other events


    #Start playback     # &start playback almost anywhere on the panels for tracks, albums, or artists, single or multi-selected


    #Search             # &basic search and filtering provided by the Spotify API


    #Not Supported#


    #Podcasts           # &not supported at all, not planned


    #Playlists          # &only list representation via panel view, no playlist management supported yet


    #For now, not possible to support#


    #Audio analysis     # &blocked by Spotify by their recent policies, unlikely to be unblocked and supported


    #Recommendations    # &Spotify internal algorithms are also blocked and cannot be accessed. This means their custom playlists, radars, radios, and similar features are
not accessible at all. For example, #Weekly recommendations# playlists formed by Spotify return 403 Forbidden; however, they can be visible 
in the #Recently played# view, can be started, and you can even see part of the tracks in the #Playing Queue# view


    If you wish to see the list of reported features or want to request a new one, visit the official Spotifar [~GitHub page~@https://github.com/maliavko/spotifar/issues?q=is%3Aissue%20state%3Aopen%20label%3Afeature@]
    

    Related topics:
    ~Browsing and Navigating~@Panels@
    ~Back to Main~@Contents@



@Config
$ #The main configuration Spotifar settings menu#

    All the settings are divided into several logical groups for the better readability.

    ~General~@ConfigGeneral@            &Far related, Spotify and UI configuration

    ~Audio backend~@ConfigPlayback@     &Librespot playback device and audio stream

    ~Hotkeys~@ConfigHotkeys@            &Global hotkeys mapping for the most commonly used playback commands

    ~Caches & logs~@ConfigCaches@       &Cache and log files management


    Related topics:
    ~Browsing and Navigating~@Panels@
    ~Caches and logging~@Caches@
    ~Back to Main~@Contents@


@ConfigGeneral
$ #General Spotifar settings dialog#

    #General#

    #Add to disks menu    # &the plugin launch option will be added to the Far disks menu
    #Verbose logging        # &additional debug and trace logging


    #Spotify API#

    &The mandatory settings for correct plugin operation, all of them are obtained
from Spotify [~developer portal~@https://developer.spotify.com/dashboard/@]. See ~instruction~@QuickStart@
how to generate your own secrets

    #Client ID              # &your Spotify client ID
    #Client Secret          # &your Spotify secret token
    #Port                   # &a port, you used during the app registration


    #Notifications#

    #Track changed          # &show or not pop-up windows notification with the new track
    #Image shape            # &notifications image shape: square or round


    Related topics:
    ~Caches and logging~@Caches@
    ~Obtaining spotify secret~@QuickStart@
    ~Back to Main~@Contents@



@ConfigBackend
$ #Librespot device configuration settings#

    #Backend enabled        # &enable/disable Librespot device, which is being started together with the plugin, in case it is on

    #Vol. normalization     # &applies or not volume normalization


    #Autoplay similar       # &if on, playback will continue with similar tracks of Spotify's choice after the currently playing context is finished


    #Gapeless playback      # &smooth track switching

    #Audio cache            # &should Librespot cache your music or not

    #Bitrate                # &audio stream bitrate value

    #Format                 # &audio stream output format

    #Dither                 # &dither algorithm


    #Volume ctrl            # &volume control behavior

    Be careful changing these parameters, as they can be incompatible with each others, read [~appropriate docs~@https://github.com/librespot-org/librespot/wiki/Options@] first.


@ConfigHotkeys

    For changing the key, you put input cursor into the appropriate input field and hit the key you want to assign, the field should catch it

    #Global hotkeys         # &enabled or disabled global hotkeys

    #VKey                   # &Windows virtual key code, only for information

    #Ctrl, Shift, Alt       # &keys modifiers, use at least some, to exclude hotkeys collissions on the system level

    #play/pause             # &start or pause playback

    #skip to next           # &skip current track to the next one

    #skip to prev           # &skip current track to the previous one

    #seek forward           # &seek current track forward by 5 sec

    #seek backward          # &seek current track backward by 5 sec

    #volume up              # &raise volume by 1

    #volume down            # &decrease volume by 1

    #show toast             # &show a "Now playing" notification in the tray


@ConfigCaches


    #Logs                   # &section represents the basic info on the accumulated log files, with the possibility to jump into the folder to see them and a command to clear

    #Caches                 # &caches management helpers

    #Releases scan          # &releases scan actual status and management



@SortDialog
$ #Sort dialog#

    The default Far sorting approach is not applicable to the plugin's needs, so it was replaced by a custom-made dialog, which shows only applicable sorting modes
for the particular views. Possible modes you can face:

    #Name               # &by name

    #Unsorted           # &keep original Spotify API sorting

    #Followers          # &by number of artist's followers

    #Popularity         # &by popularity, determined by API

    #Release Data       # &by album release date

    #Album              # &by album's name

    #Artist             # &by artist's name

    #Tracks Count       # &by album's or playlist's tracks count

    #Duration           # &by total album's or track's time duration

    #Track ##            # &by track's number

    #Played At          # &by the last time an item was played at

    #Added At           # &by the time the track was added to a playlist

    #Saved At           # &by the time the item was saved to your collection


    Related topics:
    ~Browsing and Navigating~@Panels@
    ~Back to Main~@Contents@



@SearchDialog
$ #Search dialog#
                                             
   ╔════════════════════════ Search ═════════════════════════╗   
   ║ [input field                                         ] ↓║   
   ╟─────────────────────────────────────────────────────────╢   
   ║ [ ] Albums   [x] Artists   [ ] Tracks   [ ] Playlists   ║   
   ║                                                         ║   
   ║   Genre [                       ]↓ [ ] Fresh release    ║   
   ║    Year [                       ]↓ [ ] Low rating       ║   
   ╟─────────────────────────────────────────────────────────╢   
   ║                    { Ok } [ Cancel ]                    ║   
   ╚═════════════════════════════════════════════════════════╝

    #Albums, Artists, Tracks, Playlists#        &add or exclude certain type of items from the search results

    #Genre#                                     &filters tracks and artists by genre

    #Year#                                      &filters search results by the given year

    #Fresh release#                             &past two weeks releases

    #Low rating#                                &filters search results by low rating, less than 10%

    #NOTE#
    Plugin does not perform any postprocessing operations on the search results, so if it behaves weird - this is what Spotify has decided to send you back as the results.


    Useful links:
    [~Spotify API search docs~@https://developer.spotify.com/documentation/web-api/reference/search@]


    Related topics:
    ~Search dialog results~@SearchResultsDialog@



@SearchResultsDialog
$ #Search dialog results#


    All the results are presented in one table, split horizontally. If some checkbox filters were chosen on the ~search dialog~@SearchDialog@, they will not be 
present in the results table at all. Depending on the item type, the appropriate set of columns is shown. The detailed explanation of possible columns is described
in the ~panels~@Panels@ help.


    #New button# returns to the ~search dialog~@SearchDialog@.



@Player
$ #Player Dialog#

    ╔════════════════════════ Spotifar ════════════════════════╗
    ║ Source: context                            active-device↓║
    ║                                                          ║
    ║                                                          ║
    ║ Artist1 name, Artist2 name                               ║
    ║ Track name, can be long, or very long                    ║
    ║                                                          ║
    ║ 00:00 ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ 03:15 ║
    ║                                                          ║
    ║ [+]          Shuffle [<<] [ ► ] [>>] Off          [100%] ║
    ╚══════════════════════════════════════════════════════════╝

    #Controls#
    
    #Source             # &a current playing source: artist, album, track, playlist or your collection of saved tracks. If clicked, closes the player 
and redirects user to the appropriate context view

    #Artist name        # &contains a full list of all artists, featuring on the track. If clicked, closes the player and redirects user to the 
appropriate view of the artist's, whose name was clicked; the plugin can detected which particular name the user has clicked on

    #Track name         # &a currently playing track. If clicked, closes the player and redirects user to the album, the track belongs to


    #Active device      # &the currently active playback device from the list of available devices

    #00:00              # &current playing track progress timestamp

    #03:15              # &the whole track's duration


    #[+]                # &whether the track is saved in your collection or not. If clicked, sends a command to the API to save/remove the track

    #Shuffle            # &shuffle mode is enabled or not


    #[<<] or [>>]       # &skip to previous or next respectively

    #[ ► ]              # &play/pause button


    #Off                # &the current repeat mode, can be #Off#, #Track# or #All#. Cycles the modes if clicked

    #[100%]             # &a volume level, can be changed via keyboard arrows


    #Hotkeys#

    #Space              # &play/pause

    #Arrow Right        # &seek forward*

    #Arrow Left         # &seek backward*

    #Arrow Up           # &volume up*

    #Arrow Down         # &volume down*

    #Alt + Arrow Right  # &skip to next

    #Alt + Arrow Left   # &skip to previous

    #R                  # &cycle repeat modes

    #S                  # &switch on/off shuffle mode

    #Alt + D            # &open available devices dropdown menu


    Related topics:
    ~Browsing and Navigating~@Panels@
    ~Back to Main~@Contents@


@Panels
$ #Panels UI and its capabilities#

    #Multiviews#

    The plugin operates with the views, representing some specific users view on their collections, like "recently liked tracks" or "albums tracks" etc. 
Most of the views share the same logic for the different types of items like albums, tracks or artists. So, to simplify browsing and navigating Spotifar
introduces a specific type of view - #multiview#, which encapsulates some logic inside, "Recently Liked Items" e.g., and adds to it hotkeys, for switching between
items types for the same view. For the different views a different range of switchers are available, but the mapping stays the same always.


    #Folders structure#

    #Root menu                      # &an entry point menu 
        #Collection                 # &user's collection multiview; supports switching between artists, albums, tracks or playlists
            #Artist                 # &artist personal view multiview; supports switching betwen albums and top tracks
        #Browse                     # &a menu with aux items, helping to browse your Spotify activity
            #New Releases           # &a list of albums, recently release by your followed artistss
            #Recently Saved         # &your 150 recently saved items; supports switching between albums and tracks
            #Recently Played        # &recently played tracks multiview; supports switching between artists, albums, tracks or playlist
            #Your top items         # &your top items for the past six months; supports switching between artists and tracks
        #Playing Queue              # &represents a list of the closes 20 tracks of a currently playing queue


    #Hotkeys#

    #Alt + ~                # &show player dialog

    #Ctrl + F12             # &show sort modes dialog

    #F3                     # &executing some additional calculations on the item under cursor on the panel. For album it calculates full time duration, for
artist - number of albums

    #F4                     # &start playback of the item under cursor

    #F8                     # &save or remove item from your collection

    #Shift + F5             # &if available, switches multiview to the artists list

    #Shift + F6             # &if available, switches multiview to the albums list

    #Shift + F7             # &if available, switches multiview to the tracks list

    #Shift + F8             # &if available, switches multiview to the playlists list

    #Ctrl + F3...F9         # &switch of the available sorting modes

    #Ctrl + 1..0            # &panel modes, adapted for the plugin's needs

    #Shift + Enter          # &open web-browser with the item's Spotify official page



    #Currently playing track#

    It is possible to see the currently playing track on the panel highlighted via the standard Far highlighting mechanism. Spotifar marks such tracks
with the #Encrypted# flag, so you can create a filter in the "Far menu" -> "Options" -> "Files highlighting and sort groups" and create a custom filter
that catches only the items by Attributes, and select only #Encrypted#.

    After doing that, the currently playing track will be visible on all the views on the panels.


    #Columns#

    #Name                   # &item's name

    #Albums                 # &number of artist's albums

    #Followers              # &number of artist's followers

    #Pop %                  # &item's popularity, calculated by Spotify

    #Genre                  # &main artist's genre

    #[+]                    # &saving in collection status

    #Tx                     # &number of tracks

    #Duration               # &track's or album's duration

    #Type                   # &album's type: EP, LP, or COMP

    #Artist                 # &artist's name

    #Album                  # &album's name

    #Copyrights             # &company the copyrights belong to

    #[E]                    # &track contains explicit lyrics

    #Owner                  # &playlist's owner

    #Pub                    # &whether playlist is public

    #Col                    # &whether playlist is collaborative

    #Played At              # &the time a track was played


    Related topics:
    ~Player dialog~@Player@
    ~Back to Main~@Contents@


@Caches
$ #Caches and logging#


    Spotifar uses the user's local folder for saving its own internal cache data. In most cases, the folder should be something like
C:\Users\<user-name>\AppData\Local\spotifar\. Here you can find the following items:

    #cache\             # &Librespot audio cache

    #images\            # &a cache of the track images, used for the Windows tray notifications

    #logs\              # &spotifar logs, split daily

    #system-cache\      # &Librespot system cache

    #responses.cache    # &Spotifar's HTTP responses cache, used for reducing data transfer and workload to the Spotify API