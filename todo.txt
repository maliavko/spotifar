refactor
- investigate "market" fields for some API requests, for now completly
- gcc support

application ideas
- small improvements
    - too many events classes, consider unifying some of them; plus maybe to move them somewhere to the separate file to reduce dependencies
    - think over the namings of lng keys, they are too long
    - goto playlist from player UI
    - showing some simple sorting's direction sign around the column name the sorting is applied to
    - make safer calls of the main artists from the album or tracks objects: "artists[0]"
    + to add a description to all the async tasks and log it additionally with errors
    - close plugin if another librespot device is being detected
    - to save multiview current tab between sessions
    - folow/unfollow artists
    - to save the last used view on the multiview
- new functional
    - to move followed artists to the collection cache, to add followed status on some panels like 'top user artists'
    + add redirect to Spotify website after shift+enter hit
    + win toast notifications: https://github.com/mohabouje/WinToast?tab=readme-ov-file
    - add possibility to register librespot as a win service to avoid interrupting music when far is closed: https://github.com/kirillkovalenko/nssm
    - grab lyrics from here? https://lrclib.net/
    + fresh releases through musicbrainz: https://musicbrainz.org/doc/MusicBrainz_API/Search, https://github.com/metabrainz/libmusicbrainz/tree/master/examples
    - concerts setlists: https://api.setlist.fm/docs/1.0/index.html
    - upcoming events: https://app.swaggerhub.com/apis/Bandsintown/PublicAPI/3.0.0
    - similar artists: https://www.music-map.com/
    - playlists and collections management
        - working with playlists through Use the snapshot_id to reduce amount of requests
    - console commands support: export, flush caches
    - sort order on the panel does not have any impact on the playing order, consider of having possibility of playing albums, playlists and etc. in the order, they are sorted on the panels
    - it is not clear what to do when a copy or cut operation is called on the track or album etc.
    - handling properly 429 error: it is detected by API separately for all the requests, so no need to throw runtime_error I think. For caches I can postpone resync for the retry-after time, notifying user with some message of outage e.g.

bugs
    - receiving saved tracks batches by 50, in the long lists make it constantly updating, flashing etc.

to finish for alpha release
- check all the default view settings and sort modes
- to saved/remove artists, albums and tracks, to show their status on the panels
+ disabled shuffle plus, move it to some separate branch
- help window
+ remove unfinished menus
- to review TODOs
+ to finalize "featuring" menus, user top items menu
+ to implement filter menu on each view
+ to add a proper github support: license, automations? binaries
+ to add a proper errors handling
+ loading splash screen
- localizations
+ finilize the settings menu
    + audio backend view with options
    + propagate spotify settings to librespot: normalisation, autoplay-similar, bitrate and etc. https://github.com/librespot-org/librespot/wiki/Options
- to review the panels views and clean up the view and sort modes
    + to show saved albums, artists and tracks
    - to launch playback from all the possible views
    + track number/disc number is shown weird