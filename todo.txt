refactor
- investigate "market" fields for some API requests, for now completly
- alternative compilers
- noexcept

application ideas
- small improvements
    - close plugin if another librespot device is being detected
- new functional
    - download music via https://github.com/spotDL/spotify-downloader
    - add possibility to register librespot as a win service to avoid interrupting music when far is closed: https://github.com/kirillkovalenko/nssm
    - grab lyrics from here? https://lrclib.net/
    - concerts setlists: https://api.setlist.fm/docs/1.0/index.html
    - upcoming events: https://app.swaggerhub.com/apis/Bandsintown/PublicAPI/3.0.0
    - similar artists: https://www.music-map.com/
    - playlists and collections management
        - working with playlists through Use the snapshot_id to reduce amount of requests
    - console commands support: export, flush caches, resync fresh releases
    - it is not clear what to do when a copy or cut operation is called on the track or album etc.
    - handling properly 429 error: it is detected by API separately for all the requests, so no need to throw runtime_error I think. For caches I can postpone resync for the retry-after time, notifying user with some message of outage e.g.

bugs
- after changing device in player UI, for some time is shown the old one
- closing far by cross-button, while search dialog (or any other?) is opened, hangs process quite often
- collection -> artists -> adema -> ready to die -> F4 - far freezes and eats memory as hell

to finish for alpha release
- check all the default view settings and sort modes
+ to saved/remove artists, albums and tracks, to show their status on the panels
+ disabled shuffle plus, move it to some separate branch
+ help window
+ remove unfinished menus
+ to review TODOs
+ to finalize "featuring" menus, user top items menu
+ to implement filter menu on each view
+ to add a proper github support: license, automations? binaries
+ to add a proper errors handling
+ loading splash screen
+ localizations
+ finilize the settings menu
    + audio backend view with options
    + propagate spotify settings to librespot: normalisation, autoplay-similar, bitrate and etc. https://github.com/librespot-org/librespot/wiki/Options
+ to review the panels views and clean up the view and sort modes
    + to show saved albums, artists and tracks
    + to launch playback from all the possible views
    + track number/disc number is shown weird













Exception: 0xE06D7363 - C++ exception (class std::runtime_error -> class far_wrapper_exception)
Details:   json error, data_.f.flags & kUintFlag -> exception_ptr
errno:     0x00000000 - No error
LastError: 0x00000057 - The parameter is incorrect.
NTSTATUS:  0xC00000A3 - {Drive Not Ready} The drive is not ready for use; its door may be open. Please check drive %hs and make sure that a disk is inserted and that the drive door is closed.
Address:   0x0002CF19 - KERNELBASE.dll!RaiseException+0x69
Function:  operator ()
Source:    plugapi.cpp(1288)
File:      D:\igor\drive\soft\tools\Far30\Plugins\Spotifar\spotifar.dll
Plugin:    Spotifar 3.0.1.0 (Alpha) (Spotifar Plugin for Far Manager, IgorM)
 
Far:       3.0.6060.0 x64 (a834cf2)
Compiler:  Microsoft Visual C++, version 19.29.30136.0
PE time:   2022-12-08 01:08:51.000
File time: 2022-12-08 01:08:56.000
OS:        10.0.19043.2.0.0.256.1 (version 21H1, OS build 19043.2965)
Kernel:    10.0.19041.2965 (WinBuild.160101.0800)
Host:      C:\Windows\System32\conhost.exe 10.0.19041.1 (WinBuild.160101.0800)
Parent:    D:\igor\drive\soft\tools\ConEmuPack.230724\ConEmu\ConEmuC64.exe 230724

----------------------------------------------------------------------
Exception stack
----------------------------------------------------------------------
0002CF19   KERNELBASE.dll!RaiseException+0x69
00005267   VCRUNTIME140.dll!CxxThrowException+0x97
0008CBC8   spotifar.dll!SetStartupInfoW+0x79EF8
0008CC55   spotifar.dll!SetStartupInfoW+0x79F85
0008B620   spotifar.dll!SetStartupInfoW+0x78950
000EC6E1   spotifar.dll!SetStartupInfoW+0xD9A11
000FE431   spotifar.dll!SetStartupInfoW+0xEB761
000F8396   spotifar.dll!SetStartupInfoW+0xE56C6
00128037   spotifar.dll!SetStartupInfoW+0x115367
0012591C   spotifar.dll!SetStartupInfoW+0x112C4C
00191408   far.exe!Dialog::DlgProc(__int64,__int64,void * __ptr64) __ptr64+0xC8 (dialog.obj)
001889BD   far.exe!Dialog::CtlColorDlgItem(struct FarColor * __ptr64 const,unsigned __int64,enum FARDIALOGITEMTYPES,bool,bool,unsigned __int64) __ptr64+0x16D (dialog.obj)
00189448   far.exe!Dialog::ShowDialog(unsigned __int64) __ptr64+0x3B8 (dialog.obj)
003965B3   far.exe!ScreenObject::Show(void) __ptr64+0xE3 (scrobj.obj)
002EE380   far.exe!Manager::RefreshAllCommit(void) __ptr64+0x160 (manager.obj)
002EDD76   far.exe!Manager::DoActivation(class std::shared_ptr<class window> const & __ptr64,class std::shared_ptr<class window> const & __ptr64) __ptr64+0x146 (manager.obj)
002EDF9E   far.exe!Manager::ExecuteCommit(class std::shared_ptr<class window> const & __ptr64) __ptr64+0x9E (manager.obj)
002ED4F1   far.exe!Manager::Commit(void) __ptr64+0xE1 (manager.obj)
002EAD09   far.exe!Manager::ExecuteModal(class std::shared_ptr<class window> const & __ptr64) __ptr64+0x79 (manager.obj)
00190C73   far.exe!Dialog::Process(void) __ptr64+0x2C3 (dialog.obj)
002F5738   far.exe!MessageImpl(unsigned int,class std::basic_string_view<wchar_t,struct std::char_traits<wchar_t> >,class std::vector<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,class std::allocator<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > > > && __ptr64,class std::vector<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,class std::allocator<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > > > && __ptr64,struct error_state_ex const * __ptr64 const,class span<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const >,class std::basic_string_view<wchar_t,struct std::char_traits<wchar_t> >,class Plugin * __ptr64 const,struct _GUID const * __ptr64 const)+0xCF8 (message.obj)
0034371B   far.exe!`pluginapi::apiMessageFn(struct _GUID const * __ptr64,struct _GUID const * __ptr64,unsigned __int64,wchar_t const * __ptr64,wchar_t const * __ptr64 const * __ptr64,unsigned __int64,__int64)'::`2'::<lambda_1>::operator()(void)const __ptr64+0x9EB (plugapi.obj)
0034CD62   far.exe!_Closure_wrapper_b196500b_33::<lambda_invoker_cdecl>(void * __ptr64)+0x12 (plugapi.obj)
001E7CC0   far.exe!detail::cpp_try(class function_ref<void __cdecl(void)>,class function_ref<void __cdecl(void)>,class function_ref<void __cdecl(class std::exception const & __ptr64)>)+0x40 (exception_handler.obj)
00342D1C   far.exe!pluginapi::apiMessageFn(struct _GUID const * __ptr64,struct _GUID const * __ptr64,unsigned __int64,wchar_t const * __ptr64,wchar_t const * __ptr64 const * __ptr64,unsigned __int64,__int64)+0xCC (plugapi.obj)