project infrastructure
- gcc support

refactor
- working with plpaylists through Use the snapshot_id to reduce amount of requests
- consider reformatting code to the style like in thread-pool library e.g.
- replace Api class with IApi interface everywhere is possible

application ideas
- propagate spotify settings to librespot: normalisation, autoplay-similar, bitrate and etc. https://github.com/librespot-org/librespot/wiki/Options
- panels
    - ctrl + I - filtering of albums? singles/EPs/LPs; maybe something else?
    - managing playlists via standard Far functions: create folder, move/remove from panel
    - while an album or playlist is on the panel and player is shown, update a selection of file in accordance to the playing track
    - F3 on folders
    - custom columns to show additional info, track lenght and etc
    - local far hotkey to open app player even if a spotifar panel is passive
    - comamnds for console input?
    - on the album tracks view search files with Alt does not work properly due to year in the name
- player UI
    - to add an artist main genre
    - to add an album type postfix, e.g. "Album Name [EP]"
    - to add clickable links to the artist/albums/tracks HTTP pages
    - to add a label about the playing context: album, playlist etc.
    - goto artist, album, playlist etc.
    - to finishe up likes in the player
    - extended player view with the list of tracks (or maybe on panel?)


bugs
- librespot quite often catches the error: Remote connection was forcibly closed, investigate: https://stackoverflow.com/questions/51719641/an-existing-connection-was-forcibly-closed-by-the-remote-host-web-api
- still some memory racing happens when player just works
- on th epanel, if return back from album tracks view, a cursor is no the wrong item
- after refreshing an access token, the plugin starts one more librespot process